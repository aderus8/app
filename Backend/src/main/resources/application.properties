#okre?la nazw? klasy sterownika JDBC, który b?dzie u?ywany przez aplikacj? do ??czenia si? z baz? danych MySQL.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#okre?la adres URL bazy danych MySQL, do której aplikacja b?dzie si? ??czy?. "localhost" oznacza, ?e baza danych jest uruchomiona na tym samym komputerze co aplikacja, a "3306" to numer portu, na którym baza danych nas?uchuje. "app" to nazwa bazy danych.
spring.datasource.url=jdbc:mysql://localhost:3306/app
#okre?la nazw? u?ytkownika, który b?dzie u?ywany do logowania si? do bazy danych.
spring.datasource.username=root
#okre?la has?o, które b?dzie u?ywane do logowania si? do bazy danych.
spring.datasource.password=admin
#ustawia, czy Spring ma wy?wietla? polecenia SQL generowane przez Hibernate (framework ORM u?ywany przez Spring do mapowania obiektów Java na rekordy w bazie danych) na konsoli.
spring.jpa.show-sql=true
#okre?la tryb dzia?ania narz?dzia Hibernate w odniesieniu do schematu bazy danych. W tym przypadku, Hibernate b?dzie automatycznie aktualizowa? schemat bazy danych na podstawie encji JPA.
spring.jpa.hibernate.ddl-auto=update
#okre?la dialekt bazy danych u?ywany przez Hibernate.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#okre?la, czy Hibernate ma formatowa? polecenia SQL generowane przez aplikacj?.
spring.jpa.properties.hibernate.format_sql=true

server.port=8080

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=amitkumarx31@gmail.com
spring.mail.password=************
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true